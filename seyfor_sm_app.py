# streamlit_app.py
import base64, pathlib, requests, streamlit as st

# ---------- CESTA K SOUBORU S PROMPTEM ----------------------------------------
PROMPT_FILE   = pathlib.Path("prompt.txt")

# ---------- DEFAULT PROMPT ----------------------------------------------------
DEFAULT_PROMPT = """
Napi≈° p≈ô√≠spƒõvek na soci√°ln√≠ s√≠tƒõ spoleƒçnosti **Seyfor** podle n√°sleduj√≠c√≠ch instrukc√≠:

**TONE OF VOICE**
‚Ä¢ Odborn√Ω a d≈Øvƒõryhodn√Ω ‚Äì uveƒè alespo≈à 2 konkr√©tn√≠ ƒç√≠sla ƒçi fakta  
‚Ä¢ Vst≈ô√≠cn√Ω a vdƒõƒçn√Ω ‚Äì podƒõkuj partner≈Øm, koleg≈Øm nebo √∫ƒçastn√≠k≈Øm  
‚Ä¢ Motivaƒçn√≠ a zapojuj√≠c√≠ ‚Äì obsahuje jasn√© CTA a lidskou v√Ωzvu  
‚Ä¢ Profesnƒõ p≈ô√°telsk√Ω ‚Äì korpor√°tn√≠, ale neform√°lnƒõ lidsk√Ω; pou≈æ√≠vej emoji üéâ üèÉ‚Äç‚ôÄÔ∏è üíú

**STYL PSAN√ç**
1. √övodn√≠ vƒõta s emoji a hlavn√≠m sdƒõlen√≠m  
2. 2-3 kr√°tk√© odstavce nebo odr√°≈æky (‚úÖ / üëâ / ‚Ä¢) s konkr√©tn√≠mi fakty  
3. Z√°vƒõreƒçn√° v√Ωzva k akci + podƒõkov√°n√≠  
‚Ä¢ Jazyk: **ƒçe≈°tina**  
‚Ä¢ V ka≈æd√©m odstavci max. 2 vƒõty  
‚Ä¢ Na z√°vƒõr 3-5 relevantn√≠ch hashtag≈Ø (#jsmeseyfor ‚Ä¶)

**DOPL≈áKOV√Å PRAVIDLA**
‚Ä¢ Nepi≈° datum ani m√≠sto, pokud nen√≠ zad√°no ve vstupu  
‚Ä¢ U metrik v≈ædy pou≈æij ƒç√≠slici (30 let, 4 mƒõsta, 2 t√Ωmy)  
‚Ä¢ Emoji zakomponuj organicky, nep≈ôekl√°dej jimi slova  
‚Ä¢ Rozsah do ‚âà 120 slov  

**V√ùSTUP**  
Vr√°t√≠≈° pouze text p≈ô√≠spƒõvku ‚Äì bez uvozovek a bez form√°tov√°n√≠ k√≥du.
""".strip()

# ---------- FUNKCE PRO PR√ÅCI S PROMPTEM --------------------------------------
def load_prompt() -> str:
    if PROMPT_FILE.exists():
        return PROMPT_FILE.read_text(encoding="utf-8").strip()
    return DEFAULT_PROMPT

def save_prompt(text: str):
    PROMPT_FILE.write_text(text.strip(), encoding="utf-8")

# ---------- SESSION STATE -----------------------------------------------------
if "gpt_prompt" not in st.session_state:
    st.session_state.gpt_prompt = load_prompt()

# ---------- OSTATN√ç KONSTANTY -------------------------------------------------
WEBHOOK_POST    = "https://hook.eu2.make.com/6m46qtelfmarmwpq1jqgomm403eg5xkw"
DEFAULT_PERSONA = "DefaultPersona"

# ---------- HELPER ------------------------------------------------------------
def files_to_base64(files):
    out = []
    for f in files:
        out.append(
            {"filename": f.name,
             "data": base64.b64encode(f.read()).decode("utf-8")}
        )
    return out

def rerun():   # kompatibilita verz√≠ Streamlit
    (st.rerun if hasattr(st, "rerun") else st.experimental_rerun)()

# ---------- UI ----------------------------------------------------------------
st.set_page_config(page_title="LinkedIn bot", page_icon="üìù")
st.title("LinkedIn bot")

tab_post, tab_prompt = st.tabs(["‚úçÔ∏è Vytvo≈ôit p≈ô√≠spƒõvek", "üõ† Prompt pro GPT"])

# ====================== 1)  Vytvo≈ôit p≈ô√≠spƒõvek ================================
with tab_post:
    with st.form("post_form"):
        topic = st.text_area("T√©ma / obsah p≈ô√≠spƒõvku*", height=200)
        networks = st.multiselect(
            "Vyber soci√°ln√≠ s√≠tƒõ", ["Facebook", "Instagram", "Threads"]
        )
        imgs = st.file_uploader(
            "P≈ôilo≈æ obr√°zky (JPEG/PNG)", type=["jpg", "jpeg", "png"],
            accept_multiple_files=True
        )
        submitted = st.form_submit_button("Odeslat do Make")

    if submitted:
        if not topic.strip():
            st.error("T√©ma p≈ô√≠spƒõvku je povinn√©."); st.stop()

        payload = {
            "personaName":  DEFAULT_PERSONA,
            "postContent":  topic.strip(),
            "socialNetworks": networks,
            "gptPrompt":    st.session_state.gpt_prompt,
            "images": files_to_base64(imgs) if imgs else []
        }

        with st.spinner("Odes√≠l√°m na Make‚Ä¶"):
            try:
                r = requests.post(WEBHOOK_POST, json=payload, timeout=120)
                r.raise_for_status()
            except Exception as e:
                st.error(f"Chyba p≈ôi komunikaci s Make: {e}"); st.stop()

        post = r.json().get("post", r.text)
        st.success("Hotovo! Generovan√Ω p≈ô√≠spƒõvek:")
        st.markdown(post.strip().replace("\n", "  \n"))

# ====================== 2)  Prompt pro GPT ====================================
with tab_prompt:
    st.subheader("Prompt pro GPT (trvale ulo≈æen v souboru)")

    prompt_text = st.text_area(
        "Uprav prompt dle libosti:",
        value=st.session_state.gpt_prompt,
        height=300
    )
    if st.button("Ulo≈æit prompt"):
        st.session_state.gpt_prompt = prompt_text.strip() or DEFAULT_PROMPT
        save_prompt(st.session_state.gpt_prompt)
        st.success("Prompt ulo≈æen a p≈ô√≠≈°tƒõ se naƒçte ze souboru.")
        rerun()
