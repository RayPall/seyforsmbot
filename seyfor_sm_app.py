# streamlit_app.py
# ---------------------------------------------------------------------------
#  ‚úçÔ∏è  Vytvo≈ôit p≈ô√≠spƒõvek   (WEBHOOK_POST)     ‚Äì v√Ωbƒõr s√≠t√≠ + obr√°zky
#  üõ†  Prompt pro GPT       (panel v z√°lo≈æce)  ‚Äì text, kter√Ω se p≈ôipoj√≠ do payloadu
# ---------------------------------------------------------------------------

import base64, io, json, requests, streamlit as st

# ---------- KONSTANTY ---------------------------------------------------------
WEBHOOK_POST = "https://hook.eu2.make.com/6m46qtelfmarmwpq1jqgomm403eg5xkw"
DEFAULT_PERSONA = "DefaultPersona"          # internƒõ pou≈æit√° persona
DEFAULT_PROMPT  = "Napi≈° kreativn√≠ a poutav√Ω p≈ô√≠spƒõvek pro soci√°ln√≠ s√≠tƒõ."

# ---------- SESSION STATE -----------------------------------------------------
if "gpt_prompt" not in st.session_state:
    st.session_state.gpt_prompt = DEFAULT_PROMPT

# ---------- HELPER ------------------------------------------------------------
def files_to_base64(files):
    """Vr√°t√≠ list dict≈Ø: [{'filename': .., 'data': ..}, ...]"""
    out = []
    for f in files:
        b = f.read()
        out.append({
            "filename": f.name,
            "data": base64.b64encode(b).decode("utf-8")
        })
    return out

# ---------- UI ----------------------------------------------------------------
st.set_page_config(page_title="LinkedIn bot", page_icon="üìù")
st.title("LinkedIn bot")

tab_post, tab_prompt = st.tabs(["‚úçÔ∏è Vytvo≈ôit p≈ô√≠spƒõvek", "üõ† Prompt pro GPT"])

# ====================== 1)  Vytvo≈ôit p≈ô√≠spƒõvek ================================
with tab_post:
    st.subheader("Vytvo≈ôit p≈ô√≠spƒõvek")

    with st.form("post_form"):
        topic = st.text_area("T√©ma / obsah p≈ô√≠spƒõvku*", height=200)

        networks = st.multiselect(
            "Vyber soci√°ln√≠ s√≠tƒõ",
            ["Facebook", "Instagram", "Threads"],
            placeholder="Vyber jednu ƒçi v√≠ce s√≠t√≠‚Ä¶"
        )

        uploaded_imgs = st.file_uploader(
            "P≈ôilo≈æ obr√°zky (JPEG/PNG, v√≠ce soubor≈Ø lze vybrat najednou)",
            type=["jpg", "jpeg", "png"],
            accept_multiple_files=True
        )

        submitted = st.form_submit_button("Odeslat do Make")

    if submitted:
        if not topic.strip():
            st.error("T√©ma p≈ô√≠spƒõvku je povinn√©.")
            st.stop()
        if not networks:
            st.warning("Nezvolil jsi ≈æ√°dnou soci√°ln√≠ s√≠≈• ‚Äì pokraƒçuji, ale mo≈æn√° to nechce≈°.")

        payload = {
            "personaName":  DEFAULT_PERSONA,
            "postContent":  topic.strip(),
            "socialNetworks": networks,          # list[str]
            "gptPrompt":   st.session_state.gpt_prompt,
            "images": files_to_base64(uploaded_imgs) if uploaded_imgs else []
        }

        with st.spinner("Odes√≠l√°m na Make‚Ä¶"):
            try:
                r = requests.post(WEBHOOK_POST, json=payload, timeout=120)
                r.raise_for_status()
            except Exception as e:
                st.error(f"Chyba p≈ôi komunikaci s Make: {e}")
                st.stop()

        try:
            result = r.json().get("post", "")
        except Exception:
            result = r.text

        st.success("Hotovo! Generovan√Ω p≈ô√≠spƒõvek:")
        st.markdown(result.strip().replace("\n", "  \n"))

# ====================== 2)  Prompt pro GPT ====================================
with tab_prompt:
    st.subheader("Prompt pro GPT (souƒç√°st payloadu)")

    new_prompt = st.text_area(
        "Uprav prompt dle libosti:",
        value=st.session_state.gpt_prompt,
        height=180
    )
    if st.button("Ulo≈æit prompt"):
        st.session_state.gpt_prompt = new_prompt.strip() or DEFAULT_PROMPT
        st.success("Prompt ulo≈æen.")
